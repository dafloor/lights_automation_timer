blueprint:
  name: Bewegingsgestuurd Licht met Expliciete Timer (Dag/Nacht) v4
  description: >
    VERBETERDE VERSIE: Schakelt licht(en)/scene(s) in bij beweging en start/herstart een timer.
    Schakelt het doelwit uit wanneer de timer afloopt.
    Opties voor dag/nacht. Overdag wordt gecontroleerd of een opgegeven lichtsensor
    onder een bepaalde waarde is voordat de automatisering doorgaat (alleen als
    de automatisering nog niet actief is). 's Nachts is er geen lichtniveau controle.
    Vereist een vooraf aangemaakte timer-helper.
  domain: automation

  source_url: https://raw.githubusercontent.com/dafloor/lights_automation_timer/refs/heads/main/ha_blueprint

  input:
    motion_sensors: # Naam aangepast (meervoud)
      name: Bewegingssensor(en) # Naam aangepast
      description: >
        De binary_sensor(s) die beweging detecteren.
        Selecteer een of meerdere sensoren, apparaten met bewegingssensoren,
        of gebieden met bewegingssensoren.
      selector:
        entity: # Terug naar entity selector
          domain: binary_sensor
          device_class: motion
          multiple: true  # BELANGRIJK: Sta meerdere selecties toe

    light_sensor:
      name: Lichtsensor (Optioneel voor Dag)
      description: >
        De sensor die het lichtniveau meet. Indien opgegeven, wordt overdag
        gecontroleerd of de waarde onder de ingestelde drempel is voordat
        de lichten aangaan (alleen als de automatisering nog niet actief is).
      selector:
        entity:
          domain: sensor
          device_class: illuminance

    light_level_threshold_day:
      name: Lichtniveau Drempel (Dag)
      description: >
        De maximale lichtniveau waarde (in de eenheid van de lichtsensor)
        waaronder de lichten overdag mogen aangaan (alleen indien de
        lichtsensor is opgegeven en de automatisering nog niet actief is).
      selector:
        number:
          unit_of_measurement: "lx" # Pas dit aan indien nodig
          min: 0
          max: 100 # Pas dit aan indien nodig
      default: 10

    turn_on_action_day:
      name: Actie bij inschakelen (Dag)
      description: >
        Actie die uitgevoerd moet worden bij beweging overdag (bv. activeer scene.overloop_helder).
        Voorbeeld: gebruik 'scene.turn_on' met een specifieke dag-scene.
      selector:
        action: {}
      default: []

    turn_on_action_night:
      name: Actie bij inschakelen (Nacht)
      description: >
        Actie die uitgevoerd moet worden bij beweging 's nachts (bv. activeer scene.overloop_nachtlampje).
        Voorbeeld: gebruik 'scene.turn_on' met een specifieke nacht-scene.
      selector:
        action: {}
      default: []

    light_target:
      name: Uit te schakelen doelwit(ten)
      description: >
        De lamp(en), groep(en) of gebied(en) die uitgeschakeld moeten worden na de timer.
      selector:
        target: # Gebruikt nu target selector
          entity:
            domain: light

    time_start_day:
      name: Starttijd Dag Helper
      description: De input_datetime helper die het begin van de 'dag'-periode aangeeft.
      selector:
        entity:
          domain: input_datetime

    time_start_night:
      name: Starttijd Nacht Helper
      description: De input_datetime helper die het begin van de 'nacht'-periode aangeeft (einde dag-periode).
      selector:
        entity:
          domain: input_datetime

    timer_entity:
      name: Timer Helper
      description: >
        De timer.* helper entiteit die gebruikt wordt. Maak deze vooraf aan via
        Instellingen -> Apparaten & Services -> Helpers.
      selector:
        entity:
          domain: timer

    timer_duration:
      name: Timer Duur
      description: >
        De duur voor de timer. Accepteert waarden in "HH:MM:SS" formaat
        of seconden als tekst (bijv. "300" voor 300 seconden).
      selector:
        text: {}
      default: "00:05:00"

mode: queued
max_exceeded: warning

trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: motion_detected

  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input timer_entity
    id: timer_finished

condition: []

action:
  - variables:
      var_light_target: !input light_target
      var_timer_entity: !input timer_entity
      var_light_sensor: !input light_sensor
      var_light_level_threshold_day: !input light_level_threshold_day
      # Bereken het aantal lichten dat aan is binnen het doelwit op basis van
      # wat er in light_target (area, device of entity) is aangegeven.
      lights_on_count: >
        {% set target_entities = [] %}
        {% if var_light_target.entity_id is defined %}
          {% set target_entities = var_light_target.entity_id %}
        {% elif var_light_target.device_id is defined %}
          {% set target_entities = device_entities(var_light_target.device_id) %}
        {% elif var_light_target.area_id is defined %}
          {% set target_entities = area_entities(var_light_target.area_id) %}
        {% endif %}
        {{ expand (target_entities) | selectattr('state', 'eq', 'on') | list | count }}
      # Controleer of de timer idle is
      timer_is_idle: >
        {{ is_state(var_timer_entity, 'idle') }}
      # Controleer of de lichtsensor is opgegeven en de waarde onder de drempel is
      light_level_ok_day: >
        {% if var_light_sensor %}
          {{ states(var_light_sensor) | float(0) < var_light_level_threshold_day | default(false) }}
        {% else %}
          true
        {% endif %}

  - choose:
      # --- Acties voor Trigger 1: Beweging gedetecteerd ---
      - conditions:
          - condition: trigger
            id: motion_detected
        sequence:
          # Stap 1.0: AANGEPASTE CONDITIE - Check licht & timer status
          - condition: template
            value_template: >
              {{ not (lights_on_count > 0 and timer_is_idle) }}
          - if: 
              - condition: template
                value_template: "{{ not timer_is_idle }}"
            then:
          # Stap 1.3: Start (of herstart) de timer
              - service: timer.start
                target:
                  entity_id: !input timer_entity
                data:
                  duration: !input timer_duration
            else:
              - if:
                  - condition: or
                    conditions:
                  # Stap 1.1: Extra conditie voor dag: controleer lichtniveau (alleen indien niet actief)
                    - condition: and
                      conditions:
                        - condition: time
                          after: !input time_start_day
                          before: !input time_start_night
                        - condition: template
                          value_template: "{{ lights_on_count == 0 }}" # Controleer alleen als lichten uit zijn
                        - condition: template
                          value_template: "{{ light_level_ok_day }}"
                then:
                  - sequence: !input turn_on_action_day
                    # Stap 1.3: Start (of herstart) de timer
                  - service: timer.start
                    target:
                      entity_id: !input timer_entity
                    data:
                      duration: !input timer_duration
                else:
                  - if: 
                  # Nacht (altijd doorgaan)
                      - condition: time
                        after: !input time_start_night
                        before: !input time_start_day
                    then:
                      - sequence: !input turn_on_action_night
                      - service: timer.start
                        target:
                          entity_id: !input timer_entity
                        data:
                          duration: !input timer_duration
      # --- Acties voor Trigger 2: Timer is afgelopen ---
      - conditions:
          - condition: trigger
            id: timer_finished
        sequence:
          # Stap 2.1: Schakel het doelwit uit
          - service: light.turn_off
            target: !input light_target # Werkt correct met enkele entity, groep of area

