blueprint:
  name: Bewegingsgestuurd Licht met Expliciete Timer (Dag/Nacht) v2
  description: >
    IMPROVED VERSION: Schakelt licht(en)/scene(s) in bij beweging en start/herstart een timer.
    Schakelt het doelwit uit wanneer de timer afloopt.
    Opties voor dag/nacht, alleen aanzetten als uit, en alleen uitzetten als aan.
    Vereist een vooraf aangemaakte timer-helper.
  domain: automation

# Verbetering #6: Voeg hier een URL toe naar je Gist, repository of forum post
  source_url: https://raw.githubusercontent.com/dafloor/lights_automation_timer/refs/heads/main/ha_blueprint

  input:
    motion_sensors: # Naam aangepast (meervoud)
      name: Bewegingssensor(en) # Naam aangepast
      description: >
        De binary_sensor(s) die beweging detecteren.
        Selecteer een of meerdere sensoren, apparaten met bewegingssensoren,
        of gebieden met bewegingssensoren.
      selector:
        entity: # Terug naar entity selector
          domain: binary_sensor
          device_class: motion
          multiple: true  # BELANGRIJK: Sta meerdere selecties toe

    turn_on_action_day:
      name: Actie bij inschakelen (Dag)
      description: >
        Actie die uitgevoerd moet worden bij beweging overdag (bv. activeer scene.overloop_helder).
        Voorbeeld: gebruik 'scene.turn_on' met een specifieke dag-scene.
      selector:
        action: {}
      default: []

    turn_on_action_night:
      name: Actie bij inschakelen (Nacht)
      description: >
        Actie die uitgevoerd moet worden bij beweging 's nachts (bv. activeer scene.overloop_nachtlampje).
        Voorbeeld: gebruik 'scene.turn_on' met een specifieke nacht-scene.
      selector:
        action: {}
      default: []

    # Verbetering #1: Flexibeler doelwit
    light_target:
      name: Uit te schakelen doelwit(ten)
      description: >
        De lamp(en), groep(en) of gebied(en) die uitgeschakeld moeten worden na de timer.
        BELANGRIJK: Als je de opties 'Alleen aanzetten indien uitgeschakeld?' of
        'Alleen uitschakelen indien ingeschakeld?' gebruikt, werken deze het
        meest betrouwbaar als dit een *enkele* entiteit is waarvan de status ('on'/'off')
        de algehele status goed weergeeft.
      selector:
        target: # Gebruikt nu target selector
          entity:
            domain: light

    time_start_day:
      name: Starttijd Dag Helper
      description: De input_datetime helper die het begin van de 'dag'-periode aangeeft.
      selector:
        entity:
          domain: input_datetime

    time_start_night:
      name: Starttijd Nacht Helper
      description: De input_datetime helper die het begin van de 'nacht'-periode aangeeft (einde dag-periode).
      selector:
        entity:
          domain: input_datetime

    timer_entity:
      name: Timer Helper
      description: >
        De timer.* helper entiteit die gebruikt wordt. Maak deze vooraf aan via
        Instellingen -> Apparaten & Services -> Helpers.
      selector:
        entity:
          domain: timer

    timer_duration:
      name: Timer Duur
      description: >
        De duur voor de timer. Accepteert waarden in "HH:MM:SS" formaat
        of seconden als tekst (bijv. "300" voor 300 seconden).
      selector:
        text: {}
      default: "00:05:00"

    light_level_threshold:
      name: Lichtniveau Drempel
      description: Schakel het licht overdag alleen in als het lichtniveau van de bewegingssensor onder deze waarde is.
      selector:
        number:
          min: 0
          max: 1000 # Dit is een voorbeeld bereik, pas dit aan op basis van de typische waarden van jouw sensor
          step: 1
        default: 100

mode: queued
max_exceeded: warning

trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: motion_detected

  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input timer_entity
    id: timer_finished

condition: []

action:
  - variables:
      var_light_target: !input light_target 
      var_timer_entity: !input timer_entity
    # Bereken het aantal lichten dat aan is binnen het doelwit op basis van 
    # wat er in light_target (area, device of entity) is aangegeven.
      lights_on_count: >
        {% set target_entities = [] %}
        {% if var_light_target.entity_id is defined %}
          {% set target_entities = var_light_target.entity_id | list %}
        {% elif var_light_target.device_id is defined %}
          {% set target_entities = device_entities(var_light_target.device_id) %}
        {% elif var_light_target.area_id is defined %}
          {% set target_entities = area_entities(var_light_target.area_id) %}
        {% endif %}
        {{ expand (target_entities) | selectattr('state', 'eq', 'on') | list | count }}
    # Controleer of de timer idle is
      timer_is_idle: >
        {{ is_state(var_timer_entity, 'idle') }}
    # Bereken de voorwaarde om door te gaan (true = doorgaan, false = stoppen)
    # Ga door als NIET (lichten AAN ZIJN EN timer idle IS)
      should_proceed: >
        {{ not (lights_on_count > 0 and timer_is_idle) }}

  - choose:
      # --- Acties voor Trigger 1: Beweging gedetecteerd ---
      - conditions:
          - condition: trigger
            id: motion_detected
        sequence:
          # Stap 1.0: AANGEPASTE CONDITIE - Check licht & timer status
          #           Gebruik de berekende variabele in de conditie
          - condition: template
            # Gebruik hier de variabele die we hierboven hebben berekend
            value_template: "{{ should_proceed }}"
            
          # Stap 1.1: Bepaal dag/nacht en voer de 'aan' actie uit
          - choose:
              - conditions:
                  - condition: time
                    after: !input time_start_day
                    before: !input time_start_night
                sequence:
                  - condition: template
                    value_template: >
                      {% set threshold = float(light_level_threshold) %}
                      {% set light_level_ok = false %}
                      {% for sensor in trigger.entity_id %}
                        {% if states[sensor].attributes.illuminance is defined and states[sensor].attributes.illuminance | float < threshold %}
                          {% set light_level_ok = true %}
                        {% elif states[sensor].attributes.light_level is defined and states[sensor].attributes.light_level | float < threshold %}
                          {% set light_level_ok = true %}
                        {% endif %}
                      {% endfor %}
                      {{ light_level_ok }}
                - !input turn_on_action_day
            default: !input turn_on_action_night

          # Stap 1.2: Start (of herstart) de timer
          - service: timer.start
            target:
              entity_id: !input timer_entity
            data:
              duration: !input timer_duration

      # --- Acties voor Trigger 2: Timer is afgelopen ---
      - conditions:
          - condition: trigger
            id: timer_finished
        sequence:
          # Stap 2.1: Schakel het doelwit uit
          - service: light.turn_off
            target: !input light_target # Werkt correct met enkele entity, groep of area
